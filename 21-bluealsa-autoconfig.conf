# BlueALSA autoconfig definitions

# these may be redefined by user
defaults.bluealsa.default.profile defaults.bluealsa.profile
defaults.bluealsa.default.stream duplex
defaults.bluealsa.default.fallback pcm.sysdefault

# causes the generic "bluealsa" pcm to be displayed in PCM listings only
# when there is at least one BlueALSA device connected
pcm.bluealsa.hint.show {
	@func refer
	name bluealsa.pcm.hint.show
	default off
}

# causes the generic "bluealsa" ctl to be displayed in CTL listings only
# when there is at least one BlueALSA device connected
ctl.bluealsa.hint.show {
	@func refer
	name bluealsa.ctl.hint.show
	default off
}

# User must not redefine any of the keys below

# bluealsa-autoconfig daemon creates these only if matching pcm is connected
# they are placed in writeable file, eg /run/bluealsa-autoconfig/defaults.conf
# and read into the configuration tree on demand by a hook function.
# user must not redefine these keys
# bluealsa.autoconfig.default.capture.a2dp "pcm.bluealsa:DEV=...,PROFILE=a2dp,SRV=..."
# bluealsa.autoconfig.default.capture.sco "pcm.bluealsa:DEV=...,PROFILE=sco,SRV=..."
# bluealsa.autoconfig.default.playback.a2dp "pcm.bluealsa:DEV=...,PROFILE=a2dp,SRV=..."
# bluealsa.autoconfig.default.playback.sco "pcm.bluealsa:DEV=...,PROFILE=sco,SRV=..."

bluealsa.autoconfig.hook_func.bluealsa_autoconfig {
    lib libasound_module_hook_bluealsa.so
    func bluealsa_autoconfig
}

# load bluealsa dynamic default definition
bluealsa.autoconfig.@hooks [
	{ func bluealsa_autoconfig }
]

bluealsa.autoconfig.duplex.a2dp {
	type asym
	capture.pcm {
		@func refer
		name bluealsa.autoconfig.default.capture.a2dp
		default {
			@func refer
			name defaults.bluealsa.default.fallback
		}
	}
	playback.pcm  {
		@func refer
		name bluealsa.autoconfig.default.playback.a2dp
		default {
			@func refer
			name defaults.bluealsa.default.fallback
		}
	}
}

bluealsa.autoconfig.duplex.sco {
	type asym
	capture.pcm {
		@func refer
		name bluealsa.autoconfig.default.capture.sco
		default {
			@func refer
			name defaults.bluealsa.default.fallback
		}
	}
	playback.pcm  {
		@func refer
		name bluealsa.autoconfig.default.playback.sco
		default {
			@func refer
			name defaults.bluealsa.default.fallback
		}
	}
}

bluealsa.pcm_slave {
	@args [ STREAM PROFILE ]
	@args.STREAM {
		type string
	}
	@args.PROFILE {
		type string
	}
	type empty
	slave.pcm {
		# use matching BlueALSA device if one is connected
		@func refer
		name {
			@func concat
			strings [
				"bluealsa.autoconfig.default."
				$STREAM
				"."
				$PROFILE
			]
		}
		default {
			@func refer
			name defaults.bluealsa.default.fallback
			default pcm.sysdefault
		}
	}
}

bluealsa.pcm.capture {
	@args [ PROFILE ]
	@args.PROFILE {
		type string
		default {
			@func refer
			name defaults.bluealsa.default.profile
		}
	}
	type asym
	capture.pcm {
		@func concat
		strings [
			"bluealsa.pcm_slave:STREAM=capture,PROFILE="
			$PROFILE
		]
	}
	playback.pcm pcm.sysdefault
}

bluealsa.pcm.playback {
	@args [ PROFILE ]
	@args.PROFILE {
		type string
		default {
			@func refer
			name defaults.bluealsa.default.profile
		}
	}
	type asym
	capture.pcm pcm.sysdefault
	playback.pcm {
		@func concat
		strings [
			"bluealsa.pcm_slave:STREAM=playback,PROFILE="
			$PROFILE
		]
	}
}

bluealsa.pcm.duplex {
	@args [ PROFILE ]
	@args.PROFILE {
		type string
		default {
			@func refer
			name defaults.bluealsa.default.profile
		}
	}
	type asym
	capture.pcm {
		@func concat
		strings [
			"bluealsa.pcm_slave:STREAM=capture,PROFILE="
			$PROFILE
		]
	}
	playback.pcm {
		@func concat
		strings [
			"bluealsa.pcm_slave:STREAM=playback,PROFILE="
			$PROFILE
		]
	}
}

bluealsa.pcm.default {
	@args [ STREAM PROFILE ]
	@args.STREAM {
		type string
		default {
			@func refer
			name defaults.bluealsa.default.stream
			default duplex
		}
	}
	@args.PROFILE {
		type string
		default {
			@func refer
			name defaults.bluealsa.default.profile
		}
	}
	type empty
	slave.pcm {
		# use matching BlueALSA device if one is connected
		@func refer
		name {
			@func concat
			strings [
				"bluealsa.pcm."
				$STREAM
				":PROFILE="
				$PROFILE
			]
		}
		default {
			@func refer
			name defaults.bluealsa.default.fallback
			default pcm.sysdefault
		}
	}
	hint.description "Default Audio Device"
}

bluealsa.ctl.default {
	type empty
	child {
		@func refer
		name bluealsa.autoconfig.default.ctl
		default {
			@func refer
			name ctl.sysdefault
		}
	}
	hint.description "Default Control Device"
}
